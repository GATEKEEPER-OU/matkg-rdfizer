@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix doid: <http://purl.obolibrary.org/obo/>.
@prefix ho: <https://opensource.samsung.com/projects/helifit/>.
@base <https://opensource.samsung.com/projects/helifit>.

# ############################################################################ #
#                                  Patient
# ############################################################################ #

<#Patient> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Patient')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/id/{resource.identifier[0].value}";
    rr:class ho:E21Person;
  ];

  rr:predicateObjectMap [
    rr:predicate ho:P1isIdentifiedBy;
    rr:objectMap [
      rr:parentTriplesMap <#PatientIdentifier>;
      rr:joinCondition [
        rr:child "resource.identifier[0].value";
        rr:parent "resource.identifier[0].value";
      ];
    ];
  ];
.

# /Patient

# ############################################################################ #
#                             PatientIdentifier
# ############################################################################ #

<#PatientIdentifier> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Patient')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/E42/id/{resource.identifier[0].value}";
    rr:class ho:E42Identifier;
  ];

  #
  # Link(s)
  #
  rr:predicateObjectMap [
    rr:predicate ho:P2hasType;
    rr:objectMap [
      rr:parentTriplesMap <#PatientIdentifierType>;
      rr:joinCondition [
        rr:child "resource.identifier[0].value";
        rr:parent "resource.identifier[0].value";
      ];
    ];
  ];

  #
  # Data
  #
  rr:predicateObjectMap [
    rr:predicate ho:P3hasNote;
    rr:objectMap [
      rml:reference "resource.identifier[0].value";
    ]
  ];
.

<#PatientIdentifierType> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Patient')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/sdn/{resource.identifier[0].value}";
    rr:class ho:HLF209IdentifierType;
  ];

  #
  # Data
  #
  rr:predicateObjectMap [
    rr:predicate ho:P3hasNote;
    rr:objectMap [
      rml:reference "resource.identifier[1].value";
    ]
  ];
.

# /PatientIdentifier

# ############################################################################ #
#                           ComponentIdentifier
# ############################################################################ #

<#ComponentIdentifier> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[*].resource.component[*]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/E42/code/{code.coding[0].code}";
    rr:class ho:E42Identifier;
  ];

  rr:predicateObjectMap [
    rr:predicate ho:P2hasType;
    rr:objectMap [
      rr:parentTriplesMap <#ComponentIdentifierType>;
      rr:joinCondition [
        rr:child "fullUrl";
        rr:parent "fullUrl";
      ];
    ];
  ];

  rr:predicateObjectMap [
    rr:predicate ho:P3hasNote;
    rr:objectMap [
      rml:reference "code.coding[0].code";
    ]
  ];

  # @todo to map in the next release
  #rr:predicateObjectMap [
  #  rr:predicate ho:P3hasNote;
  #  rr:objectMap [
  #    rml:reference "code.coding[0].display";
  #  ]
  #];
.

<#ComponentIdentifierType> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[*].resource.component[*]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/sdn/{code.coding[0].systemDomainName}";
    rr:class ho:HLF209IdentifierType;
  ];

  rr:predicateObjectMap [
    rr:predicate ho:P3hasNote;
    rr:objectMap [
      rml:reference "code.coding[0].system";
    ]
  ];
.

# /ComponentIdentifier

<#Device> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/D8/id/{resource.device.identifier.value}";
    rr:class ho:D8DigitalDevice;
  ];
  rr:predicateObjectMap [
    rr:predicate ho:P1isIdentifiedBy;
    rr:objectMap [
      rr:parentTriplesMap <#DeviceIdentifier>;
      rr:joinCondition [
        rr:child "resource.device.identifier.value";
        rr:parent "resource.device.identifier.value";
      ];
    ];
  ];
.



<#DeviceIdentifierType> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/E42/id/{resource.device.identifier.value}";
    rr:class ho:E42Identifier;
  ];

  rr:predicateObjectMap [
    rr:predicate ho:P3hasNote;
    rr:objectMap [
      rml:reference "resource.device.identifier.value";
    ]
  ];
.
<#DeviceIdentifier> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/E42/id/{resource.device.identifier.value}";
    rr:class ho:E42Identifier;
  ];

  #
  # Link(s)
  #
  rr:predicateObjectMap [
    rr:predicate ho:P2hasType;
    rr:objectMap [
      rr:parentTriplesMap <#DeviceIdentifierType>;
      rr:joinCondition [
        rr:child "resource.device.identifier.value";
        rr:parent "resource.device.identifier.value";
      ];
    ];
  ];
.

# ############################################################################ #
#                           TemportalEntityIdentifier
# ############################################################################ #

<#TemportalEntityIdentifier> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation' || @.resource.resourceType == 'Condition')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/E42/code/{resource.code.coding[0].code}";
    rr:class ho:E42Identifier;
  ];

  #
  # Link(s)
  #
  rr:predicateObjectMap [
    rr:predicate ho:P2hasType;
    rr:objectMap [
      rr:parentTriplesMap <#TemportalEntityIdentifierType>;
      rr:joinCondition [
        rr:child "fullUrl";
        rr:parent "fullUrl";
      ];
    ];
  ];

  #
  # Data
  #
  rr:predicateObjectMap [
    rr:predicate ho:P3hasNote;
    rr:objectMap [
      rml:reference "resource.code.coding[0].code";
    ]
  ];
.

<#TemportalEntityIdentifierType> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation' || @.resource.resourceType == 'Condition')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/sdn/{resource.code.coding[0].code}";
    rr:class ho:HLF209IdentifierType;
  ];

  #
  # Data
  #
  rr:predicateObjectMap [
    rr:predicate ho:P3hasNote;
    rr:objectMap [
      rml:reference "resource.code.coding[0].system";
    ]
  ];
.

# /TemportalEntityIdentifier

# ############################################################################ #
#                                  ObservationTimeSpan
# ############################################################################ #

<#ObservationTimeSpan> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/E52/code/{resource.code.coding[0].code}/id/{resource.id}";
    rr:class ho:E52TimeSpan;
  ];

  rr:predicateObjectMap [
    rr:predicate ho:EP9effectiveDatatime;
    rr:objectMap [
      rml:reference "resource.effectiveDateTime";
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ho:EP7starts;
    rr:objectMap [
      rml:reference "resource.effectivePeriod.start";
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ho:EP8ends;
    rr:objectMap [
      rml:reference "resource.effectivePeriod.end";
      rr:datatype xsd:dateTime
    ]
  ];
.

# /ObservationTimeSpan

# ############################################################################ #
#                                  ConditionTimeSpan
# ############################################################################ #

<#ConditionTimeSpan> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Condition')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/E52/code/{resource.code.coding[0].code}/id/{fullUrl}";
    rr:class ho:E52TimeSpan;
  ];

  rr:predicateObjectMap [
    rr:predicate ho:EP9effectiveDatatime;
    rr:objectMap [
      rml:reference "resource.recordedDate";
      rr:datatype xsd:dateTime
    ]
  ];
.

# /ConditionTimeSpan

<#FloorsClimbedAssignment> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation' && @.resource.code.coding[0].code == 'floors_climbed')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/HLF532/code/{resource.code.coding[0].code}/id/{resource.id}";
    rr:class ho:HLF532FloorsClimbedAssignment;
  ];

  #
  # Metadata
  #

  rr:predicateObjectMap [
    rr:predicate ho:P4hasTimeSpan;
    rr:objectMap [
      rr:parentTriplesMap <#ObservationTimeSpan>;
      rr:joinCondition [
        rr:child "fullUrl";
        rr:parent "fullUrl";
      ];
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ho:P140assignedAttributeTo;
    rr:objectMap [
      rr:parentTriplesMap <#PatientIdentifier>;
      rr:joinCondition [
        rr:child "resource.subject.display";
        rr:parent "resource.identifier[1].value";
      ];
    ];
  ];

  #
  # Includes
  #
  rr:predicateObjectMap [
    rr:predicate ho:P117includes;
    rr:objectMap [
      rr:parentTriplesMap <#FloorsClimbedMeasurement>;
      rr:joinCondition [
        rr:child "resource.id";
        rr:parent "resource.id";
      ];
    ];
  ];
.

<#FloorsClimbedMeasurement> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation' && @.resource.code.coding[0].code == 'floors_climbed')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/HLF331/code/{resource.code.coding[0].code}/id/{resource.id}";
    rr:class ho:HLF331FloorsClimbedMeasurement;
  ];

  #
  # Metadata
  #
  rr:predicateObjectMap [
    rr:predicate ho:P14carriedOutBy;
    rr:objectMap [
      rr:parentTriplesMap <#Patient>;
      rr:joinCondition [
        rr:child "resource.subject.display";
        rr:parent "resource.identifier[1].value";
      ];
    ];
  ];

  rr:predicateObjectMap [
    rr:predicate ho:P4hasTimeSpan;
    rr:objectMap [
      rr:parentTriplesMap <#ObservationTimeSpan>;
      rr:joinCondition [
        rr:child "fullUrl";
        rr:parent "fullUrl";
      ];
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ho:P1isIdentifiedBy;
    rr:objectMap [
      rr:parentTriplesMap <#TemportalEntityIdentifier>;
      rr:joinCondition [
        rr:child "fullUrl";
        rr:parent "fullUrl";
      ];
    ];
  ];

  rr:predicateObjectMap [
    rr:predicate ho:L12happenedOnDevice;
    rr:objectMap [
      rr:parentTriplesMap <#Device>;
      rr:joinCondition [
        rr:child "fullUrl";
        rr:parent "fullUrl";
      ];
    ];
  ];
  
  #
  # Data
  #
  rr:predicateObjectMap [
    rr:predicate ho:P40observedDimension;
    rr:objectMap [
      rr:parentTriplesMap <#FloorsClimbedDimension>;
      rr:joinCondition [
         rr:child "resource.id";
        rr:parent "resource.derivedFrom[0].display";
      ];
    ];
  ];
.

#
# floor
<#FloorsClimbedDimension> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "__RML_SRC__";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.entry[?(@.resource.resourceType == 'Observation' && @.resource.code.coding[0].code == 'floor')]"
  ];

  rr:subjectMap [
    rr:template "https://opensource.samsung.com/projects/helifit/type/HLF426/code/{resource.code.coding[0].code}/id/{fullUrl}";
    rr:class ho:HLF426FloorsClimbedDimension;
  ];

  #
  # Data
  #
  rr:predicateObjectMap [
    rr:predicate ho:P91hasUnit;
    rr:objectMap [
      rml:reference "resource.valueQuantity.unit";
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ho:P90hasValue;
    rr:objectMap [
      rml:reference "resource.valueQuantity.value";
    ]
  ];
.



